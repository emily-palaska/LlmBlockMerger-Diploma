import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np

def plot_histogram(data, bins=20, title='Histogram', x='Value', y='', path=None):
    sns.histplot(data, bins=bins, kde=True, color='darkorange')
    mean = np.mean(data)
    std = np.std(data)
    label = rf'$\mu$ = {mean:.2f}s, $\sigma$ = {std:.2f}'
    plt.axvline(mean, color='royalblue', linestyle='--', linewidth=2, label=label)

    plt.title(title)
    plt.xlabel(x)
    plt.ylabel(y)
    plt.legend()
    if path: plt.savefig(path)
    else: plt.show()
    plt.close()

def preprocess_hist(lang='gr'):
    times = [602.697, 584.956, 593.173, 635.232, 578.815, 551.392, 611.186, 592.575, 620.375, 568.611, 571.117, 588.869,
             570.240, 568.377, 571.667, 582.509, 561.970, 592.287, 585.755, 598.879]
    samples = len(times)
    x_label = 'Χρόνος Εκτέλεσης (s)' if lang == 'gr' else 'Execution Time (s)'
    title = f'Ιστόγραμμα Χρόνου Προ-επεξεργασίας {samples} Δειγμάτων' if lang == 'gr' \
        else f'<Pre-processing Time Histogram with {samples} Samples'
    path = '../../plots/preprocessing.png'
    plot_histogram(times, title=title, x=x_label, path=path)

def restore_hist(lang='gr'):
    times = [3.444, 2.567, 2.502, 2.534, 2.223, 2.432, 2.213, 2.338, 2.595, 2.999, 2.355, 2.937, 2.541, 2.811, 2.626, 2.278, 2.338, 2.143, 2.204, 2.271, 2.199, 2.482, 2.185, 2.885, 2.343, 2.665, 2.276, 2.176, 2.249, 2.177, 2.256, 2.261, 2.788, 3.037, 2.251, 2.372, 2.280, 2.324, 2.349, 2.076, 2.356, 2.433, 2.189, 2.261, 2.213, 2.209, 2.486, 2.232, 2.536, 2.165, 2.320, 2.098, 2.472, 2.112, 2.454, 2.195, 2.161, 2.352, 2.457, 2.227, 2.362, 2.179, 2.183, 2.740, 2.313, 2.509, 2.234, 2.336, 2.655, 2.169, 2.217, 2.962, 2.278, 2.442, 2.254, 2.270, 2.269, 2.680, 2.154, 2.313, 2.310, 2.183, 2.157, 2.268, 2.308, 2.316, 2.190, 3.133, 2.504, 4.099, 2.809, 3.678, 2.491, 2.428, 2.457, 2.351, 2.318, 2.155, 2.865, 2.153, 2.240, 2.210, 2.702, 2.228, 3.045, 2.472, 2.316, 2.424, 2.387, 2.731, 2.500, 2.126, 2.409, 2.385, 3.696, 2.820, 2.204, 2.193, 2.851, 2.829, 2.867, 2.473, 2.653, 2.187, 2.230, 2.209, 2.207, 2.174, 2.653, 2.168, 2.237, 2.227, 2.287, 2.446, 2.280, 2.969, 2.254, 2.292, 2.206, 2.206, 2.243, 2.298, 2.282, 2.197, 2.198, 2.293, 2.268, 2.156, 2.252, 2.229, 2.306, 2.249, 2.208, 2.213, 2.312, 2.140, 2.183, 2.147, 2.159, 2.266, 2.298, 2.327, 2.460, 2.152, 2.279, 2.206, 2.196, 2.199, 2.300, 2.163, 2.286, 2.243, 2.303, 2.310, 2.470, 2.159, 2.158, 2.289, 2.274, 2.256, 2.308, 2.218, 2.241, 2.210, 2.195, 2.532, 2.311, 2.293, 2.287, 2.442, 2.518, 2.221, 2.800, 2.359, 2.245, 2.293, 2.988, 2.442, 2.323, 2.489, 2.381, 3.195, 2.181, 2.263, 2.326, 2.514, 2.291, 2.334, 2.622, 2.281, 2.215, 2.203, 2.241, 2.372, 2.297, 2.258, 2.253, 2.303, 2.235, 2.211, 2.350, 2.366, 2.278, 2.232, 2.253, 2.330, 2.305, 2.256, 2.271, 2.291, 2.690, 2.197, 2.429, 2.276, 2.273, 2.345, 2.534, 4.097, 2.320, 2.309, 2.899, 2.367, 2.305, 2.276, 2.406, 2.582, 2.276, 2.206, 2.272, 2.521, 2.387, 2.586, 2.243, 2.304, 2.638, 2.177, 2.276, 2.305, 2.301, 2.313, 2.272, 2.308, 2.271, 2.362, 2.320, 2.302, 2.288, 2.591, 3.594, 2.348, 2.603, 2.434, 2.684, 4.310, 2.714, 2.946, 2.451, 2.295, 2.310, 2.350, 2.312, 2.420, 2.264, 2.361, 2.432, 2.365, 2.668, 2.390, 2.335, 3.484, 2.292, 2.638, 2.314, 2.663, 2.781, 2.387, 2.390, 2.302, 2.362, 2.361, 2.323, 2.460, 2.350, 2.450, 2.509, 2.312, 2.365, 2.275, 2.646, 2.346, 2.324, 2.383, 2.254, 2.418, 2.416, 2.577, 2.342, 2.754, 2.943, 2.534, 2.285, 2.549, 2.948, 2.329, 2.420, 2.768, 2.300, 2.334, 2.575, 2.795, 2.358, 2.366, 2.325, 2.503, 2.363, 2.275, 2.626, 2.435, 2.581, 2.447, 2.332, 2.300, 2.696, 2.618, 2.466, 2.430, 2.436, 2.663, 2.381, 2.615, 2.420, 3.187, 2.451, 2.384, 2.396, 2.361, 2.318, 2.366, 2.354, 2.407, 2.319, 2.316, 2.403, 2.439, 2.528, 2.311, 2.360, 2.410, 2.469, 2.375, 2.443, 3.620, 2.524, 2.456, 2.688, 2.729, 2.949, 2.445, 2.407, 2.391, 2.700, 2.431, 2.890, 2.472, 2.340, 2.343, 2.359, 2.514, 2.429, 2.290, 2.352, 2.398, 2.480, 2.457, 2.335, 2.714, 2.647, 2.339, 2.676, 2.396, 2.461, 2.470, 2.601, 2.364, 2.406, 2.405, 2.367, 2.624, 2.353, 3.089, 2.495, 2.416, 2.359, 2.459, 2.451, 2.426, 2.461, 2.703, 2.438, 2.416, 2.526, 2.565, 2.627, 3.494, 2.408, 2.431, 2.394, 2.489, 2.421, 2.416, 2.376, 2.450, 2.542, 2.469, 2.436, 2.695, 2.417, 2.451, 2.425, 2.529, 2.525, 2.498, 2.742, 2.624, 3.530, 2.583, 4.824, 2.903, 2.685, 2.846, 2.578, 2.573, 2.640, 3.074, 3.472, 2.458, 2.595, 2.891, 2.546, 2.685, 2.370, 2.672, 2.441, 2.507, 2.440, 2.535, 2.453, 2.516, 2.402, 2.458, 2.417, 3.178, 2.419, 2.506, 2.476, 2.763, 2.430, 2.544, 2.690, 2.650, 2.600, 2.815, 2.419, 2.687, 2.470, 2.496, 2.482, 2.724, 2.497, 2.463, 2.427, 2.620, 2.717, 2.710, 2.554, 2.452, 2.539, 2.559, 2.399, 3.104, 2.468, 2.542, 2.956, 2.883, 2.599, 2.585, 2.759, 2.470, 2.622, 2.618, 2.557, 2.565, 2.572, 2.441, 2.682, 2.446, 2.481, 2.914, 2.428, 2.586, 2.483, 2.500, 2.541, 2.640, 2.524, 3.106, 2.543, 2.485, 2.458, 2.690, 2.761, 2.467, 2.861, 2.840, 2.495, 2.400, 2.525, 2.679, 2.441, 2.558, 2.476, 2.637, 2.485, 2.488, 2.531, 3.121, 2.579, 2.488, 2.682, 2.586, 2.501, 2.549, 2.450, 2.641, 2.527, 2.608, 2.802, 2.777, 3.007, 2.502, 3.437, 2.653, 2.552, 2.758, 2.905, 2.963, 2.492, 2.636, 2.943, 2.832, 2.533, 2.520, 2.615, 2.743, 2.804, 2.545, 2.563, 2.717, 2.588, 4.086, 3.308, 3.749, 2.559, 3.160, 3.110, 2.645, 3.185, 3.044, 2.617, 2.681, 2.538, 2.847, 2.725, 2.827, 3.566, 2.585, 2.549, 2.817, 2.536, 2.664, 2.529, 3.060, 2.558, 2.760, 2.670, 2.540, 2.586, 2.502, 2.822, 2.632, 2.867, 2.579, 2.549, 2.568, 2.707, 2.595, 2.579, 2.549, 2.585, 2.545, 3.320, 2.524, 2.647, 2.761, 2.614, 2.555, 2.614, 2.530, 2.583, 2.573, 2.575, 2.525, 2.656, 2.605, 2.864, 2.619, 2.820, 2.618, 2.685, 2.725, 2.829, 2.837, 2.678, 2.761, 2.699, 2.618, 2.685, 2.595, 2.545, 2.557, 2.824, 2.599, 2.627, 2.591, 2.822, 2.591, 2.827, 2.862, 2.691, 2.668, 2.687, 2.806, 2.602, 2.750, 2.780, 2.829, 2.618, 2.655, 2.797, 2.612, 2.780, 2.948, 2.604, 2.950, 2.609, 2.622, 2.559, 2.569, 2.628, 2.687, 3.281, 2.647, 2.833, 2.661, 2.925, 2.713, 2.822, 2.652, 2.681, 2.669, 2.858, 2.587, 2.813, 2.664, 2.628, 2.707, 2.721, 2.876, 2.626, 2.781, 2.645, 2.686, 2.610, 2.679, 2.606, 2.859, 2.833, 2.797, 3.121, 2.646, 2.995, 2.659, 2.629, 2.803, 2.953, 2.667, 2.654, 2.950, 2.957, 2.638, 2.772, 2.780, 2.913, 2.948, 2.705, 2.614, 2.858, 2.600, 2.602, 2.600, 2.903, 2.617, 2.702, 2.701, 2.670, 2.912, 2.757, 2.667, 2.878, 2.693, 2.953, 2.943, 2.806, 3.108, 2.905, 2.675, 2.874, 3.032, 3.019, 2.632, 2.807, 2.633, 2.750, 2.663, 2.811, 2.667, 2.743, 2.658, 2.877, 2.606, 2.657, 2.714, 2.756, 2.993, 2.748, 3.190, 3.009, 3.169, 2.758, 3.069, 2.725, 2.753, 3.198, 2.733, 2.893, 2.814, 2.786, 2.734, 2.852, 2.774, 2.860, 2.924, 3.393, 2.750, 3.127, 2.960, 3.053, 2.798, 2.879, 3.488, 3.433, 2.893, 2.949, 3.034, 2.787, 2.892, 2.885, 2.825, 2.780, 3.066, 3.265, 2.907, 2.869, 2.867, 2.839, 3.117, 2.693, 3.068, 2.870, 2.914, 2.959, 2.821, 3.004, 2.864, 2.936, 3.326, 2.839, 3.021, 2.799, 2.841, 3.071, 3.133, 3.009, 2.909, 2.897, 2.879, 2.783, 3.057, 2.832, 2.981, 2.918, 2.842, 2.777, 3.682, 2.724, 2.993, 2.718, 2.994, 4.540, 5.160, 2.987, 3.218, 2.809, 3.516, 2.794, 3.026, 3.001, 2.749, 2.885, 2.761, 2.734, 3.197, 2.804, 2.860, 2.881, 2.894, 2.952, 3.123, 2.861, 2.810, 2.832, 2.818, 3.243, 2.924, 3.211, 3.041, 2.926, 2.884, 2.820, 3.321, 3.083, 3.010, 3.242, 3.043, 3.074, 3.084, 13.214, 2.740, 2.770, 3.001, 3.156, 2.942, 3.025, 3.352, 2.828, 3.154, 2.893, 3.018, 3.003, 2.831, 2.933, 2.837, 2.813, 2.819, 2.788, 2.823, 2.947, 3.212, 3.517, 2.821, 3.072, 2.802, 2.801, 2.751, 2.820, 2.801, 3.282, 2.843, 2.807, 2.892, 2.879, 2.915, 3.174, 2.793, 3.044, 3.316, 2.845, 2.849, 3.130, 2.795, 2.968, 2.915, 3.145, 2.881, 2.862, 2.882, 2.916, 3.025, 3.017, 2.925, 2.932, 4.306, 2.841, 3.185, 2.908, 2.853, 2.908, 2.832, 3.307, 3.100, 3.136, 3.492, 2.878, 3.235, 2.817, 2.913, 2.996, 3.083, 3.086, 3.283, 3.151, 2.883, 2.939, 2.886, 3.010, 3.216, 3.042, 2.877, 2.901, 3.110, 3.057, 2.892, 2.995, 2.865, 3.015, 2.969, 2.934, 3.150, 2.843, 3.242, 3.244, 3.066, 3.133, 3.868, 4.717, 3.351, 3.825, 3.835, 3.621, 3.181, 3.408, 3.342, 3.038, 3.195, 3.049, 3.228, 3.514, 2.905, 3.057, 3.159, 3.226, 3.667, 2.914, 3.022, 3.259, 3.145, 3.012, 3.567, 3.093, 3.009, ]
    samples = len(times)
    x_label = 'Χρόνος Εκτέλεσης (s)' if lang == 'gr' else 'Execution Time (s)'
    title = f'Ιστόγραμμα Χρόνου Επαναφοράς {samples} Δειγμάτων' if lang == 'gr' \
        else f'<Restoring Time Histogram with {samples} Samples'
    path = '../../plots/restoring.png'
    plot_histogram(times, title=title, x=x_label, path=path)

if __name__ == '__main__':
    pass